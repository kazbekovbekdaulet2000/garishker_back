# Generated by Django 3.2 on 2022-07-23 19:23

import ckeditor_uploader.fields
import common.yandex_storage
import course.models.course.resource
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('video', '0004_auto_20220717_1725'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('obrazovanie', '0005_remove_video_original_quality'),
        ('organizations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('answer_kk', models.CharField(max_length=255, verbose_name='Ответ (каз)')),
                ('answer_ru', models.CharField(max_length=255, verbose_name='Ответ (рус)')),
                ('correct', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': '[8] Ответ',
                'verbose_name_plural': '[8] Ответы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('likes_count', models.PositiveIntegerField(default=0, verbose_name='Лайки')),
                ('comments_count', models.PositiveIntegerField(default=0, verbose_name='Комментарии')),
                ('reviews_count', models.PositiveIntegerField(default=0, verbose_name='Рейтинг')),
                ('bookmarks_count', models.PositiveIntegerField(default=0, verbose_name='Сохранения')),
                ('name_kk', models.CharField(max_length=255, verbose_name='Название (каз)')),
                ('name_ru', models.CharField(max_length=255, verbose_name='Название (рус)')),
                ('description_kk', models.TextField(blank=True, verbose_name='Описание (каз)')),
                ('description_ru', models.TextField(blank=True, verbose_name='Описание (рус)')),
                ('duriation', models.DurationField(blank=True, default='7 00:00:00', verbose_name='Длительность курса')),
                ('to_view', models.BooleanField(default=False, verbose_name='Доступна для показа')),
                ('views', models.PositiveIntegerField(default=0)),
                ('image', models.FileField(blank=True, upload_to='course-image', verbose_name='Обложка')),
                ('lesson_count', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='course_category', to='obrazovanie.category', verbose_name='Категория')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='organizations.organization')),
                ('teaser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='video.videourl')),
            ],
            options={
                'verbose_name': '[1] Курс',
                'verbose_name_plural': '[1] Курсы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CourseUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('completed', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='users', to='course.course')),
            ],
            options={
                'verbose_name': '[a] Прогресс в курсе',
                'verbose_name_plural': '[a] Прогресс в курсе',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Lector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('surname', models.CharField(max_length=255, verbose_name='Фамилия')),
                ('role_kk', models.TextField(max_length=500, null=True, verbose_name='Сфера деятельности (каз)')),
                ('role_ru', models.TextField(max_length=500, null=True, verbose_name='Сфера деятельности (рус)')),
                ('description_kk', models.TextField(max_length=500, null=True, verbose_name='Описание (каз)')),
                ('description_ru', models.TextField(max_length=500, null=True, verbose_name='Описание (рус)')),
                ('icon', models.ImageField(blank=True, default='garysh.jpg', null=True, upload_to='lector', verbose_name='Фото')),
            ],
            options={
                'verbose_name': '[4] Лектор',
                'verbose_name_plural': '[4] Лекторы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('likes_count', models.PositiveIntegerField(default=0, verbose_name='Лайки')),
                ('comments_count', models.PositiveIntegerField(default=0, verbose_name='Комментарии')),
                ('reviews_count', models.PositiveIntegerField(default=0, verbose_name='Рейтинг')),
                ('bookmarks_count', models.PositiveIntegerField(default=0, verbose_name='Сохранения')),
                ('name_kk', models.CharField(max_length=255, verbose_name='Название (каз)')),
                ('name_ru', models.CharField(max_length=255, verbose_name='Название (рус)')),
                ('description_kk', models.TextField(blank=True, verbose_name='Описание (каз)')),
                ('description_ru', models.TextField(blank=True, verbose_name='Описание (рус)')),
                ('duriation', models.DurationField(blank=True, verbose_name='Длительность')),
                ('views', models.PositiveIntegerField(default=0)),
                ('order', models.PositiveIntegerField(default=0)),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='course.course')),
                ('lector', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lessons', to='course.lector')),
            ],
            options={
                'verbose_name': '[2] Урок',
                'verbose_name_plural': '[2] Уроки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LessonModule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('likes_count', models.PositiveIntegerField(default=0, verbose_name='Лайки')),
                ('comments_count', models.PositiveIntegerField(default=0, verbose_name='Комментарии')),
                ('reviews_count', models.PositiveIntegerField(default=0, verbose_name='Рейтинг')),
                ('bookmarks_count', models.PositiveIntegerField(default=0, verbose_name='Сохранения')),
                ('name_kk', models.CharField(max_length=255, verbose_name='Название (каз)')),
                ('name_ru', models.CharField(max_length=255, verbose_name='Название (рус)')),
                ('description_kk', models.TextField(blank=True, verbose_name='Описание (каз)')),
                ('description_ru', models.TextField(blank=True, verbose_name='Описание (рус)')),
                ('duriation', models.DurationField(blank=True, verbose_name='Длительность')),
                ('video', models.CharField(blank=True, default='', max_length=6250, verbose_name='Название видео с расширением)')),
                ('lector', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='lesson_modules', to='course.lector')),
                ('lesson', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lesson_modules', to='course.lesson')),
            ],
            options={
                'verbose_name': '[3] Модуль',
                'verbose_name_plural': '[3] Модули',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('completed', models.BooleanField(default=False)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='course.lesson')),
            ],
            options={
                'verbose_name': '[b] Прогресс в уроках',
                'verbose_name_plural': '[b] Прогресс в уроках',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('question_kk', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Вопрос (каз)')),
                ('question_ru', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Вопрос (рус)')),
                ('point', models.PositiveIntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5)])),
                ('is_active', models.BooleanField(default=False, verbose_name='Активный')),
            ],
            options={
                'verbose_name': '[7] Вопрос',
                'verbose_name_plural': '[7] Вопросы',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('name_ru', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название (рус)')),
                ('name_kk', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название (каз)')),
                ('max_points', models.PositiveIntegerField(default=0, editable=False)),
                ('default_pass_percentage', models.DecimalField(decimal_places=0, default=0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Процент прохождения')),
                ('default_attempts_count', models.PositiveIntegerField(default=3, validators=[django.core.validators.MaxValueValidator(5)], verbose_name='Количество попыток')),
            ],
            options={
                'verbose_name': '[6] Тест',
                'verbose_name_plural': '[6] Тесты',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuizProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('attempt', models.PositiveIntegerField(default=1)),
                ('completed', models.BooleanField(default=False)),
                ('lesson_progress', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to='course.lessonprogress')),
                ('quiz', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.quiz')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='course.courseuser')),
            ],
            options={
                'verbose_name': '[c] Прогресс в квизах',
                'verbose_name_plural': '[c] Прогресс в квизах',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('name_kk', models.CharField(max_length=255, verbose_name='Название (каз)')),
                ('name_ru', models.CharField(max_length=255, verbose_name='Название (рус)')),
                ('description_kk', models.TextField(blank=True, verbose_name='Описание (каз)')),
                ('description_ru', models.TextField(blank=True, verbose_name='Описание (рус)')),
                ('file', models.FileField(blank=True, storage=common.yandex_storage.ClientDocsStorage, upload_to=course.models.course.resource.course_dir, verbose_name='Файл')),
                ('link', models.CharField(blank=True, max_length=5000, null=True, verbose_name='Ссылка')),
                ('image', models.FileField(blank=True, upload_to=course.models.course.resource.course_resource, verbose_name='Обложка')),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='course.course')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='course.lesson')),
                ('lesson_module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='course.lessonmodule')),
            ],
            options={
                'verbose_name': '[5] Ресурс',
                'verbose_name_plural': '[5] Ресурсы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='QuizQuestionProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменен')),
                ('correct', models.BooleanField()),
                ('point', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(5)])),
                ('answer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.answer')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.question')),
                ('quiz_progress', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='course.quizprogress')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_answers', to='course.courseuser')),
            ],
            options={
                'verbose_name': '[d] Прогресс в вопросах',
                'verbose_name_plural': '[d] Прогресс в вопросах',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='questions', to='course.quiz'),
        ),
        migrations.AddField(
            model_name='lessonprogress',
            name='quiz',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.quiz'),
        ),
        migrations.AddField(
            model_name='lessonprogress',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_lessons', to='course.courseuser'),
        ),
        migrations.AddField(
            model_name='lessonmodule',
            name='quiz',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='course.quiz'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='quiz',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='course.quiz'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='video',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='video.videourl'),
        ),
        migrations.AddField(
            model_name='courseuser',
            name='current_lesson',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='course.lesson'),
        ),
        migrations.AddField(
            model_name='courseuser',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='courses', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='course.question'),
        ),
    ]
